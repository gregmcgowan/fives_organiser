buildscript {
    ext.versions = [
            'android_gradle'             : '7.0.0-alpha02',
            'androidx'                   : [
                    'appcompat'               : '1.2.0',
                    'card_view'               : '1.0.0',
                    'constraint_layout'       : '1.1.3',
                    'fragment'                : '1.0.0',
                    'lifecycle'               : '2.2.0',
                    'palette'                 : '1.0.0',
                    'recyclerview'            : '1.1.0',
                    'test_runner'             : '1.1.0',
                    'test_core'               : '1.3.0',
                    'test_rules'              : '1.3.0',
                    'test_junit'              : '1.1.2',
                    'arch_core_testing'       : "1.0.0",
                    'hilt_compiler'           : "1.0.0-alpha02",
                    'hilt_lifecycle_viewmodel': "1.0.0-alpha02",
                    'activity_ktx'            : "1.1.0",
                    'fragment_ktx'            : "1.2.5",
            ],
            'kotlin'                     : '1.4.20',
            'kotlin_gradle_plugin'       : '1.4.20',
            'coroutines'                 : '1.4.2',
            'material'                   : '1.0.0',
            'compose'                    : '1.0.0-alpha08',
            'firebase_core'              : '16.0.9',
            'firebase_auth'              : '17.0.0',
            'firebase_database'          : '16.0.3',
            'firestore'                  : '17.1.1',
            'firebase_crashlytics'       : '17.2.2',
            'firebase_crashlytics_gradle': '2.4.1',
            'google_services'            : '4.2.0',
            'dagger'                     : '2.29.1',
            'dagger_hilt'                : '2.29-alpha',
            'threetenabp'                : '1.1.0',
            'timber'                     : '4.7.1',
            'espresso'                   : '3.1.0-alpha4',
            'junit'                      : '4.12',
            'mockito'                    : '2.23.0',
            'mockito_kotlin'             : '2.0.0-RC3',
            'hamcrest'                   : '1.3',
            'robolectric'                : '4.0.1',
            'detek'                      : '1.0.0.RC6-4'

    ]
    ext.buildConfig = [
            'minSdk'    : 21,
            'compileSdk': 30,
            'targetSdk' : 28,
    ]

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$versions.android_gradle"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_gradle_plugin"
        classpath "com.google.gms:google-services:$versions.google_services"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$versions.firebase_crashlytics_gradle"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.dagger_hilt"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC6-4"
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://maven.google.com' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
}

detekt {
    version = "${versions.detek}"
    profile("main") {
        input = "$projectDir/app"
        config = "$projectDir/quality/detekt-config.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        output = "$projectDir/quality/reports"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}



subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = '1.8'
           // allWarningsAsErrors = true
            freeCompilerArgs += '-Xallow-jvm-ir-dependencies'
            // Opt-in to experimental compose APIs
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including collectAsState()
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
        }
    }

    afterEvaluate {
        if (pluginManager.hasPlugin("kotlin-kapt")) {
            kapt {
                useBuildCache = true
            }
        }
    }
}