// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    // Define versions in a single place
    ext {
        // Sdk and tools
        minSdkVersion = 21
        targetSdkVersion = 27
        compileSdkVersion = 27
        buildToolsVersion = '26.0.2'

        // App dependencies
        daggerVersion = '2.14.1'
        kotlinVersion = '1.2.21'
        coroutinesVersion = '0.21'
        supportLibraryVersion = '27.0.2'
        constraintLayoutVersion = '1.1.0-beta4'
        lifeCyclesRuntimesVersion = '1.1.0'
        lifeCyclesExtensionsVersion = '1.1.0'
        lifeCyclesCompilerVersion = '1.1.0'
        firebaseVersion = '11.8.0'

        timberVersion = '4.6.0'
        threeTenAbpVersion = '1.0.5'

        junitVersion = '4.12'
        mockitoVersion = '2.7.21'
        hamcrestVersion = '1.3'
        runnerVersion = '0.5'
        rulesVersion = '0.5'
        espressoVersion = '2.2.2'
        robolectricVersion = '3.4'
    }
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.google.gms:google-services:3.1.0'
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC6-3"
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com'
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
}

detekt {
    version = "1.0.0.RC6-3"
    profile("main") {
        input = "$projectDir/app"
        config = "$projectDir/quality/detekt-config.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        output = "$projectDir/quality/reports"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


